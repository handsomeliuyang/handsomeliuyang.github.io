[{"cover":"/hexo-img/default_cover.png","title":"框架设计的重新思考与 HarmonyOS Next 实践","month":"十月","day":12,"date":"2024-10-12","url":"/2024/10/12/经验总结-2024-10-12-鸿蒙化的框架设计思考/","desc":"围绕HarmonyOS Next的框架设计展开，探讨了在鸿蒙化过程中如何规避安卓系统中的历史包袱与遗留问题。文章重点介绍了如何通过组件化与服务抽象层的结合，提升系统架构的灵活性和可维护性；并通过实际案例详细分析了接口聚合、异步操作、模块化拆分等具体设计策略。此外，还阐述了View层的MVVM架构和Model层的单一数据源模式，展示了在鸿蒙生态中构建高效、简洁的应用框架的思路和实践经验。","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"HarmonyOS","path":"/tags/HarmonyOS/"}]},{"cover":"/hexo-img/default_cover.png","title":"Android内核学习笔记：Android进程\\线程管理","month":"十月","day":8,"date":"2023-10-8","url":"/2023/10/08/日常学习-Android内核学习笔记：Android进程线程管理/","desc":"\n# Android程序启动过程\n\n![](Android程序的启动流程.png)\n\n1. ActivityManagerService与WindowManagerService在独立的进程里，与程序进度之间的通信通过Bindler进行\n2. 每个应用程序都是运行在独立的进程里的，进程与进程之间无法直接通信，每个进程里都一个JVM虚拟机，不能通过static进行通信\n3. 应用程序的进程是由...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android内核学习笔记","path":"/tags/Android内核学习笔记/"}]},{"cover":"/hexo-img/default_cover.png","title":"ASM 学习心得","month":"八月","day":8,"date":"2023-8-8","url":"/2023/08/08/经验总结-ASM学习心得/","desc":"ASM字节码插桩实践：Hook点定位与工具类开发","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"ASM","path":"/tags/ASM/"},{"name":"AOP","path":"/tags/AOP/"}]},{"cover":"/hexo-img/default_cover.png","title":"App的Repo多仓库管理","month":"二月","day":22,"date":"2023-2-22","url":"/2023/02/22/经验总结-App的Repo多仓库管理/","desc":"解决项目的仓库多了后的管理痛点，对比了git submodule方案，详细的描述了App的Repo适配的全流程。","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"python","path":"/tags/python/"}]},{"cover":"/hexo-img/default_cover.png","title":"从开发者角度思考单元测试的价值","month":"十一月","day":2,"date":"2022-11-2","url":"/2022/11/02/经验总结-从开发者角度思考单元测试的价值/","desc":"单元测试不仅仅能提升代码质量，在整个开发期间，也能大幅提升运行效率及沟通效率","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"python","path":"/tags/python/"}]},{"cover":"/hexo-img/default_cover.png","title":"Dart的const理解","month":"五月","day":28,"date":"2022-5-28","url":"/2022/05/28/日常学习-Dart的const理解/","desc":"真正了解const的使用方法和作用，减少内存占用和提升性能","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Dart","path":"/tags/Dart/"}]},{"cover":"/hexo-img/default_cover.png","title":"Anki助手：解决孩子复习和家长辅导的痛点","month":"七月","day":26,"date":"2021-7-26","url":"/2021/07/26/经验总结-Anki助手/","desc":"Anki 对知识点的记忆上有非常大的帮助，基于遗忘曲线有针对性的适时重复，对于有一定自制力的成人来说，帮助非常的大，但对于缺乏自制力的孩子来说，使用体验上问题比较多","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/default_cover.png","title":"暗黑适配方案比较","month":"五月","day":17,"date":"2021-5-17","url":"/2021/05/17/经验总结-暗黑适配方案的对比/","desc":"night resources 适配和 theme 适配暗黑的对比","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/default_cover.png","title":"基于git和markdown的文档平台","month":"五月","day":11,"date":"2021-5-11","url":"/2021/05/11/经验总结-基于git和markdown的文档平台/","desc":"对于一个团队而言，文档的重要性不言而喻，为此我们尝试了很多的文档平台，如wiki, confluence，iwiki，ishare等等。实际使用过程中，总会有各种各样的问题，而且无法定制解决。","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/default_cover.png","title":"Android端的架构设计的演进和思考","month":"四月","day":26,"date":"2021-4-26","url":"/2021/04/26/经验总结-Android端的架构设计的演进和思考/","desc":"设计框架是随着业务规模不断演进和迭代，大概介绍MVC、MVP、MVVM，并对比了MVVM+RxJava和MVVM+Clean的区别点","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/责任链模式两种典型实现/intercepter-rxjava-class.drawio.svg","title":"责任链模式两种典型实现","month":"一月","day":20,"date":"2021-1-20","url":"/2021/01/20/日常学习-责任链模式两种典型实现/","desc":"对比学习责任链模式的两个实现方案，重点分析Okhttp拦截器的链式调用方式","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"设计模式","path":"/tags/设计模式/"}]},{"cover":"/hexo-img/群晖搭建个人和工作的数据中心/cover.jpg","title":"群晖：搭建个人和工作的数据中心","month":"一月","day":3,"date":"2021-1-3","url":"/2021/01/03/经验总结-群晖搭建个人和工作的数据中心/","desc":"构建个人和工作的数据中心，实现数据的集中管理和多终端的无缝接力","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"NAS","path":"/tags/NAS/"}]},{"cover":"/hexo-img/StudyDemos的Demo列表的动态配置实现/cover.jpg","title":"StudyDemos的Demo列表的动态配置实现","month":"十一月","day":5,"date":"2020-11-5","url":"/2020/11/05/经验总结-StudyDemos的Demo列表的动态配置实现/","desc":"每次在StudyDemos工程里，添加知识点Demo时，总有一部分工作是重复的，那就是在首页添加入口。省掉这个重复添加的过程就是我的目的。","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/hexo本地静态搜索实现/cover.jpg","title":"hexo本地静态搜索实现","month":"十月","day":31,"date":"2020-10-31","url":"/2020/10/31/经验总结-hexo本地静态搜索实现/","desc":"Hexo的静态搜索不能利用常规后端做数据库的存储及查询来实现搜索功能，需要利用前端js脚本实现","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"hexo","path":"/tags/hexo/"}]},{"cover":"/hexo-img/default_cover.png","title":"VSCode插件开发之Markdown扩展功能","month":"十月","day":24,"date":"2020-10-24","url":"/2020/10/24/经验总结-VSCode插件开发之Markdown扩展功能/","desc":"自定义vscode的插件，提升基于Git+Markdown的文档平台的使用体验","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"nodejs","path":"/tags/nodejs/"}]},{"cover":"/hexo-img/default_cover.png","title":"双开系列：AIDL原理简介及动态扩展实现","month":"八月","day":9,"date":"2020-8-9","url":"/2020/08/09/经验总结-双开系列：AIDL原理简介及动态扩展实现/","desc":"简述AIDL的原理，但无法动态新增接口，通过IPC总结可以实现动态添加跨进程通信的接口","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/default_cover.png","title":"ARCore实现iOS的AR效果","month":"七月","day":21,"date":"2020-7-21","url":"/2020/07/21/经验总结-ARCore实现iOS的AR效果/","desc":"由于ARCore发展比ARKit慢很多，加上终端上的差异，提供的能力比较弱，最新Sceneform-1.16.0版本，才支持glTF的animation。","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/default_cover.png","title":"云服务搭建Anki Sync Server","month":"一月","day":8,"date":"2020-1-8","url":"/2020/01/08/经验总结-云服务搭建Anki-Sync-Server/","desc":"除了经常用到的知识外，很多知识点，我们都处于懂的阶段，之前的学过的知识，之前写过的分享，只要长时间不使用，就记不清了，导致相同的知识总是处于学习，忘记，再学习的过程。","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"docker","path":"/tags/docker/"}]},{"cover":"/hexo-img/default_cover.png","title":"58App/Android端的动态化框架实践与思考","month":"十一月","day":22,"date":"2019-11-22","url":"/2019/11/22/经验总结-58App-Android端的动态化框架实践与思考/","desc":"58业务需求特点：多端的快速开发，多套跨平台框架，业务跨App迁移。为了满足此业务要求，整体技术框架的实现手段有：业务层，跨平台框架层，基础能力层","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"}]},{"cover":"/hexo-img/default_cover.png","title":"Flutter混合工程工程化编译改造系列：add to app源码分析","month":"十月","day":30,"date":"2019-10-30","url":"/2019/10/30/日常学习-Flutter的add-to-app源码分析/","desc":"分析Android端的add to app的源码，了解内部编译源理","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Flutter","path":"/tags/Flutter/"}]},{"cover":"/hexo-img/default_cover.png","title":"PageView滑动进入首页效果","month":"九月","day":18,"date":"2019-9-18","url":"/2019/09/18/经验总结-PageView滑动进入首页效果/","desc":"Flutter的PageView实现例子","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"Flutter","path":"/tags/Flutter/"}]},{"cover":"/hexo-img/default_cover.png","title":"Flutter与Android工程的混合开发","month":"九月","day":17,"date":"2019-9-17","url":"/2019/09/17/日常学习-Flutter与Android工程的混合开发/","desc":"Flutter与现有Android工程融合后的要求：Flutter工程与Android工程解耦；扩展能力通过Flutter Plugin实现；Flutter工程能独立运行；包大小要求：只保留armeabi下的so","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"Flutter","path":"/tags/Flutter/"}]},{"cover":"/hexo-img/default_cover.png","title":"Flutter的任务队列与Dart语法","month":"八月","day":24,"date":"2019-8-24","url":"/2019/08/24/日常学习-Flutter的任务队列与Dart语法/","desc":"由于同时进行多个项目，不同项目之间使用不同的语言，如Java，Dart，Javascript，Kotlin。每种语言之间虽然大体相同，但还是有一些细节差异，为了提升开发效率，总结Dart的语法差异点并记忆。","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"Flutter","path":"/tags/Flutter/"}]},{"cover":"/hexo-img/default_cover.png","title":"OpenGL学习笔记3：纹理","month":"八月","day":17,"date":"2019-8-17","url":"/2019/08/17/日常学习-OpenGL学习笔记3：纹理/","desc":"OpenGL纹理篇，记录关键点","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"OpenGL","path":"/tags/OpenGL/"}]},{"cover":"/hexo-img/default_cover.png","title":"部落详情页RN化（ReactNative实现高度不确定的评论类列表）","month":"七月","day":28,"date":"2019-7-28","url":"/2019/07/28/经验总结-部落详情页RN化/","desc":"有很多的无法确定字体数量及高度的回复类消息，此类列表消息，通过FlatList等控件，实现后的效果会很差。针对此问题的优化思路：使用recyclerlistview控件替换flatlist控件，实现对Item的复用；提前通过Native计算Text的高度","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"ReactNative","path":"/tags/ReactNative/"}]},{"cover":"/hexo-img/default_cover.png","title":"OpenGL学习笔记2：着色器和C++","month":"七月","day":10,"date":"2019-7-10","url":"/2019/07/10/日常学习-OpenGL学习笔记2：着色器和C/","desc":"OpenGL着色器，记录关键点","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"OpenGL","path":"/tags/OpenGL/"}]},{"cover":"/hexo-img/default_cover.png","title":"B-树和B+树学习笔记","month":"六月","day":30,"date":"2019-6-30","url":"/2019/06/30/日常学习-B-树和B-树学习笔记/","desc":"\n# B-树\n关键点：\n1. B-树的读法：读做B树，而不是B减树\n2. 背景：\n    1. 磁盘操作（如数据库），数据库索引是存储在磁盘上的，当数据量比较大时：\n        1. 索引非常大，可能有几个G甚至更多，无法全部加载到内存，只能逐一加载磁盘页\n        2. 磁盘页存储的数据是固定的，对应索引树的节点，即搜索树的节点数据是受磁盘页的大小决定\n    2. 由于磁盘的I...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"}]},{"cover":"/hexo-img/default_cover.png","title":"编译ReactNative-0.57.8的64位so","month":"六月","day":25,"date":"2019-6-25","url":"/2019/06/25/经验总结-编译ReactNative-0-57-8的64位so/","desc":"支持64位so的背景：Google Play要求在2019-8月之后的所有更新包都必须支持64位；方舟编译器也需要支持64位。ReactNative从0.58.0版本开始，支持64位，但更新ReactNative的版本的成本非常之高，升级频率一般在1年左右","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"ReactNative","path":"/tags/ReactNative/"}]},{"cover":"/hexo-img/default_cover.png","title":"OpenGL学习笔记1：绘制三角形","month":"六月","day":17,"date":"2019-6-17","url":"/2019/06/17/日常学习-OpenGL学习笔记1：绘制三解形/","desc":"# 学习教程\n> 零基础开始学习OpenGL的最佳教程learnOpenGL：https://learnopengl-cn.github.io/intro/\n\n此笔记的学习章节：\n1. [OpenGL](https://learnopengl-cn.github.io/01%20Getting%20started/01%20OpenGL/)\n2. [创建窗口](https://learnop...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"OpenGL","path":"/tags/OpenGL/"}]},{"cover":"/hexo-img/default_cover.png","title":"动态规划与贪心算法学习笔记","month":"六月","day":11,"date":"2019-6-11","url":"/2019/06/11/日常学习-动态规划与贪心算法学习笔记/","desc":"\n# 动态规划\n关键点：\n1. 动态规划理解：\n    1. 适用场景：通过组合子问题的解来求解原问题，同时子问题有重叠的情况。--- 如递归函数\n    2. 思路：内存换时间，先求解子问题的解并保存，减少重复计算\n    3. 注意：动态规划求解的值是最优的，但最优解的路径不唯一，可能有多条\n2. 动态规划的步骤：\n    1. 计算出状态转移方程，递归地定义最优解的值 ---- 如递归...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"}]},{"cover":"/hexo-img/default_cover.png","title":"Lepton支持gitlab的改造路程","month":"六月","day":5,"date":"2019-6-5","url":"/2019/06/05/经验总结-Lepton支持gitlab的改造路程/","desc":"\n# 背景\n在一套成熟的App框架里，有非常丰富的基础库，中间件等等模块。新的需求都是基于这些基础能力来开发的，RD在开发时，大部分都是Copy再做二次开发，容易产生如下问题：\n1. Copy的是有问题的代码：如老的网络请求代码\n2. 缺少必须文档，Copy后理解不到位，改动时容易出现Bug\n3. 代码融合了特定的业务逻辑，需要删除成本\n\n除了必要的文档外，希望有相应的代码片段库，同时具有分...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"前端","path":"/tags/前端/"},{"name":"electron","path":"/tags/electron/"}]},{"cover":"/hexo-img/default_cover.png","title":"数据结构学习笔记","month":"六月","day":4,"date":"2019-6-4","url":"/2019/06/04/日常学习-数据结构学习笔记/","desc":"\n# 栈\n关键点：\n1. 后进先出（last in, first out）\n2. 插入操作称为Push（压入），删除操作称为Pop（弹出）\n3. 数组实现栈：top指针指向栈顶元素\n    ```java\n    private int[] stack = new int[9];\n    int top = -1; // top指针\n    boolean stackEmpty(){\n   ...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"}]},{"cover":"/hexo-img/default_cover.png","title":"Kotlin学习笔记","month":"五月","day":7,"date":"2019-5-7","url":"/2019/05/07/日常学习-Kotlin学习笔记/","desc":"\n# Kotlin优势\n\n1. 更安全，避免NPE（NullPointerException），强制判断再使用\n2. 更多的语言特性（如java8新特性，类扩展等等），使用代码更简洁\n3. 与Java互调，能使用Java所有的工具库（原因：Kotlin编译为JVM上运行的字节码，与java的原生字节码基本一致，部份情况下，性能更强）\n\n# Kotlin基础类型\nKotlin是强类型语言，即确...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Kotlin","path":"/tags/Kotlin/"}]},{"cover":"/hexo-img/default_cover.png","title":"LeetCode Largest Number","month":"四月","day":26,"date":"2019-4-26","url":"/2019/04/26/日常学习-LeetCodeLargestNumber/","desc":"\n# 题目\nGiven a list of non negative integers, arrange them such that they form the largest number.\n\nExample 1:\n```\nInput: [10,2]\nOutput: \"210\"\n```\n\nExample 2:\n```\nInput: [3,30,34,5,9]\nOutput: \"95343...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"},{"name":"leetcode","path":"/tags/leetcode/"}]},{"cover":"/hexo-img/default_cover.png","title":"Flutter在58App上的深度调研","month":"四月","day":16,"date":"2019-4-16","url":"/2019/04/16/日常学习-Flutter在58App上的深度调研/","desc":"\n# 背景\n\n现在跨平台的框架主要有如下几种：\n1. ReactNative，Weex\n2. kotlin-native\n3. Flutter\n4. 小程序\n5. Hybrid\n\n长期来看，跨平台开发一定会是一个趋势，因为其能带来如下好处：\n1. 减少开发成本，提升开发效率\n2. 动态部署，不依赖发版\n\n但现阶段，框架很多，各有各的优缺点，对于应用开发的RD来说，面临一个框架如何选择的难题。...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"Flutter","path":"/tags/Flutter/"}]},{"cover":"/hexo-img/default_cover.png","title":"百度小程序源码解读","month":"二月","day":25,"date":"2019-2-25","url":"/2019/02/25/日常学习-百度小程序源码解读/","desc":"\n# 整体框架\n百度小程序的开发Api，加构设计与微信小程序基本一致。\n\n为了提升整体性能，充分利用手机的多CPU性能：\n1. 把逻辑层与渲染层分离，分别位于不同的运行容器\n2. 异步请求都由native来执行\n\n![](../../hexo-img/百度小程序源码解读/整体框架2.png)\n\n1. 逻辑层\n    1. 逻辑层就是对开发者所暴露的Api，有App，Page，布局文件，其中的...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"前端","path":"/tags/前端/"},{"name":"小程序","path":"/tags/小程序/"}]},{"cover":"/hexo-img/default_cover.png","title":"LeetCode Merge K Sorted Lists","month":"一月","day":23,"date":"2019-1-23","url":"/2019/01/23/日常学习-LeetCodeMergeKSortedLists/","desc":"\n# 题目\nGiven K sorted linked lists of size N each, merge them and print the sorted output.\n\nExample:\n```\nInput: k = 3, n =  4\nlist1 = 1->3->5->7\nlist2 = 2->4->6->8\nlist3 = 0->9->10->11\n\nOutput: \n0->...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"},{"name":"leetcode","path":"/tags/leetcode/"}]},{"cover":"/hexo-img/default_cover.png","title":"LeetCode Longest Common Prefix","month":"一月","day":11,"date":"2019-1-11","url":"/2019/01/11/日常学习-LeetCodeLongestCommonPrefix/","desc":"\n# 题目\nWrite a function to find the longest common prefix string amongst an array of strings.\n\nIf there is no common prefix, return an empty string \"\".\n\nExample 1:\n```\nInput: [\"flower\",\"flow\",\"fligh...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"},{"name":"leetcode","path":"/tags/leetcode/"}]},{"cover":"/hexo-img/default_cover.png","title":"LeetCode Regular Expression Matching","month":"十二月","day":29,"date":"2018-12-29","url":"/2018/12/29/日常学习-LeetCode-Regular-Expression-Matching/","desc":"\n# 题目\nGiven an input string (s) and a pattern (p), implement regular expression matching with support for '.' and '*'.\n```\n'.' Matches any single character.\n'*' Matches zero or more of the precedin...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"},{"name":"leetcode","path":"/tags/leetcode/"}]},{"cover":"/hexo-img/default_cover.png","title":"LeetCode Longest Common Substring","month":"十二月","day":15,"date":"2018-12-15","url":"/2018/12/15/日常学习-Leetcode-longest-common-substring/","desc":"\n# 题目\nGiven two strings ‘X’ and ‘Y’, find the length of the longest common substring.\n\n**Examples :**\n```\nInput : X = \"GeeksforGeeks\", y = \"GeeksQuiz\"\nOutput : 5\nThe longest common substring is \"Ge...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"},{"name":"leetcode","path":"/tags/leetcode/"}]},{"cover":"/hexo-img/default_cover.png","title":"LeetCode Longest Palindromic Substring","month":"十二月","day":6,"date":"2018-12-6","url":"/2018/12/06/日常学习-leetcode-longest-palindromic-substring/","desc":"\n# 题目\nGiven a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.\n\nExample 1:\n```\nInput: \"babad\"\nOutput: \"bab\"\nNote: \"aba\" is also a valid an...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"},{"name":"leetcode","path":"/tags/leetcode/"}]},{"cover":"/hexo-img/default_cover.png","title":"LeetCode之Median of Two Sorted Arrays","month":"十二月","day":3,"date":"2018-12-3","url":"/2018/12/03/日常学习-LeetCode之Median-of-Two-Sorted-Arrays/","desc":"\n# 题目\nThere are two sorted arrays nums1 and nums2 of size m and n respectively.\n\nFind the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).\n\nYou may assume nu...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"},{"name":"leetcode","path":"/tags/leetcode/"}]},{"cover":"/hexo-img/default_cover.png","title":"Flutter实现Git权限分配工具之旅","month":"十月","day":30,"date":"2018-10-30","url":"/2018/10/30/日常学习-Flutter实现Git权限分配工具之旅/","desc":"# Flutter初见\n> Flutter is a mobile app SDK for building high-performance, high-fidelity, apps for iOS and Android, from a single codebase. \n\nFlutter 是一款移动应用程序 SDK，致力于使用一套代码来构建高性能、高保真的 iOS 和 Android ...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"Flutter","path":"/tags/Flutter/"}]},{"cover":"/hexo-img/default_cover.png","title":"DiyReact学习之路","month":"八月","day":7,"date":"2018-8-7","url":"/2018/08/07/日常学习-DiyReact学习之路/","desc":"# DiyReact的功能\nReact的核心点：\n1. 组件（Component）\n2. Virtual Dom\n3. JSX\n4. Props & State\n\n核心的渲染的Api：\n```javascript\nReactDOM.render(element, container[, callback])\n```\n\n在不考虑性能，调试，扩展性的情况下，实现上面React的核心功能，相同Ap...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"前端","path":"/tags/前端/"}]},{"cover":"/hexo-img/default_cover.png","title":"MPVue源码分析","month":"六月","day":7,"date":"2018-6-7","url":"/2018/06/07/日常学习-MPVue源码分析/","desc":"\n# Demo\n使用Vue实现一个消息逆转的demo：\n```html\n\n  {{ message }}\n  逆转消息\n\n```\n\n```javascript\nvar app = new Vue({\n    el: '#app',\n    data: {\n    \tmessage: 'Hello Vue.js!'\n  \t},\n  \tmethods: {\n    \treverseMessage...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"},{"cover":"/hexo-img/default_cover.png","title":"react-native-wechatmini","month":"四月","day":2,"date":"2018-4-2","url":"/2018/04/02/经验总结-react-native-wechatmini/","desc":"// 实现思路\n\nReact包括两层编程模型：数据模型、UI界面。\n\nReact的核心点：\n1. VirsualDom\n2. 组件化\n\n## 参考\n1. [微信小程序模块化](https://github.com/maichong/labrador)\n2. ","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"},{"cover":"/hexo-img/default_cover.png","title":"Gatsby搭建博客之旅","month":"三月","day":19,"date":"2018-3-19","url":"/2018/03/19/经验总结-Gatsby搭建博客之旅/","desc":"## Gatsby简介\n\n> Blazing-fast static site generator for React （React的快速静态网站生成器）\n\n**几大特点：**\n> 1.Modern web tech without the headache（不再为web技术落后而头痛）\n>> Enjoy the power of the latest web technologies – ...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"},{"cover":"/hexo-img/default_cover.png","title":"抽屉效果实现三端化（android，ios，web）的历程","month":"三月","day":4,"date":"2018-3-4","url":"/2018/03/04/经验总结-抽屉效果实现三端化的历程/","desc":"ReactNative-Web的实践过程，通过ReactNative的Metro编译出的bundle.js文件，只能在对应的App里运行，无法直接在浏览器里运行","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"ReactNative","path":"/tags/ReactNative/"}]},{"cover":"/hexo-img/default_cover.png","title":"微信聊天数据定时清理","month":"十二月","day":12,"date":"2017-12-12","url":"/2017/12/12/经验总结-微信聊天数据定时清理/","desc":"\n# 技术方案选择\n\nAndroid测试支持库有：\n\n1. Junit3, Junit4：用于方法级别的单元测试，不通过手机运行，在测试一些正则表达式时，非常方便\n    ![](1.png)\n2. AndroidJUnitRunner：在手机上运行Junit测试，如一些需要获取Context的方法\n2. Espresso：UI 测试框架；适合应用中的功能性 UI 测试。\n3. UI Aut...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"自动化测试","path":"/tags/自动化测试/"}]},{"cover":"/hexo-img/default_cover.png","title":"异或总结","month":"八月","day":18,"date":"2017-8-18","url":"/2017/08/18/经验总结-异或总结/","desc":"\n# 异或（exclusive or）的定义\n\n符号：\n> XOR 或 EOR 或 ⊕（编程语言中常用^）\n\n定义：逻辑运算里，仅当两个运算元中恰有一个的值为真，而另外一个的值为非真时，其值为真\n> 1 ⊕ 1 = 0\n> 0 ⊕ 0 = 0\n> 1 ⊕ 0 = 1\n> 0 ⊕ 1 = 1\n\n# 异或的特性\n\n> 恒等律：X ⊕ 0 = X （X为任意整数）  \n> 归零律：X ⊕ X = ...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"算法","path":"/tags/算法/"}]},{"cover":"/hexo-img/default_cover.png","title":"Docker-Jenkins服务搭建","month":"七月","day":14,"date":"2017-7-14","url":"/2017/07/14/经验总结-Docker-Jenkins服务搭建/","desc":"\n# Docker介绍\n\nDocker 是一个开源的应用容器引擎，基于 Go 语言 并遵从Apache2.0协议开源。可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。\n容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。\n\n## Docker理解\n\n![](...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"jenkins","path":"/tags/jenkins/"},{"name":"docker","path":"/tags/docker/"}]},{"cover":"/hexo-img/default_cover.png","title":"如何设计高保真原型图","month":"三月","day":14,"date":"2017-3-14","url":"/2017/03/14/日常学习-Axure设计原型图/","desc":"\n# 背景\n在设计“专项测试平台项目”的需求文档时，按传统的word设计需求文档带来的问题：\n\n1. 文档不够详细，没有交互，没有各种出错的处理情况\n2. 没有一个平台的功能流程全貌，无法提前给上级审核\n3. 需求评审的效率很低\n\n通过分析，发现主要原因是出在需求文档上，现在的静态word文档，能表达的信息很有限，那有没有更好的方式。这就是今天要分享的：高保真原型图。\n\n> 注意：实现高保真...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"axure","path":"/tags/axure/"}]},{"cover":"/hexo-img/default_cover.png","title":"前端学习系列2：从移动端的角度学习与分析Redux","month":"一月","day":15,"date":"2017-1-15","url":"/2017/01/15/日常学习-前端学习系列：从移动端的角度学习与分析Redux/","desc":"\n# 遇到的问题\n\n通过上往篇文章[前端学习系列：基于React的Robot框架的踩坑之旅](https://handsomeliuyang.github.io/2016/12/30/Robot%E6%A1%86%E6%9E%B6-Nodejs+Express+React+MaterialUI/)介绍，已经搭建起React的整体环境，但在进行具体业务开发时，还是遇到如下问题：\n\n1. 所有界...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Robot","path":"/tags/Robot/"},{"name":"React","path":"/tags/React/"},{"name":"nodejs","path":"/tags/nodejs/"}]},{"cover":"/hexo-img/default_cover.png","title":"前端学习系列：基于React的Robot框架的踩坑之旅","month":"十二月","day":30,"date":"2016-12-30","url":"/2016/12/30/经验总结-Robot框架-Nodejs-Express-React-MaterialUI/","desc":"\n# 背景\n\n上次给大家介绍Robot平台框架，其特点：\n\n1. 由nodejs+express+react+bootstrap实现\n2. UI使用开源UI库：[charisma](https://github.com/usmanhalalit/charisma)\n3. React通过browserify+babel打包处理\n\n效果如下：\n![](robot界面.png)\n\n其中遇到的一些问...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Robot","path":"/tags/Robot/"},{"name":"React","path":"/tags/React/"},{"name":"nodejs","path":"/tags/nodejs/"}]},{"cover":"/hexo-img/default_cover.png","title":"React实现MergeRequest管理","month":"十一月","day":15,"date":"2016-11-15","url":"/2016/11/15/经验总结-React实现MergeRequest管理/","desc":"\n## 什么是React\nReact是一个前端框架，与其类似的有vue、angular 2.x等等。改变前端开发模式，让前端开发更加方便，让前端也使用面向对象的方案来开发。相关的一些特点可以看其官方文档\n\n## ES6,JSX\n\nJavaScript是一个统称，其标准的名称为：**ECMAScript**。ES6, ES5是两个不同的标准，现在的主流浏览器都完全支持**ES5**的语法，不支...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Robot","path":"/tags/Robot/"},{"name":"React","path":"/tags/React/"},{"name":"nodejs","path":"/tags/nodejs/"}]},{"cover":"/hexo-img/default_cover.png","title":"Android签名的过程","month":"六月","day":13,"date":"2016-6-13","url":"/2016/06/13/日常学习-2016-04-14-Android签名的过程/","desc":"# Android对apk签名过程\n\nApk解压后的结构：\n![](../../hexo-img/img_markdown/27.png)\n\n会生成一个META-INF的文件夹存放签名相关的数据：MANIFEST.MF WUBA_KEY.RSA WUBA_KEY.SF。此三个文件都是我们对unsigin.apk签名时生成的。\n\n![](../../hexo-img/img_markdown/...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"},{"cover":"/hexo-img/default_cover.png","title":"58同城Hybrid框架的点点滴滴","month":"三月","day":24,"date":"2016-3-24","url":"/2016/03/24/经验总结-58同城Hybrid框架的点点滴滴/","desc":"记录58同城在Hybrid迭代过程的点点滴滴","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"开发模式","path":"/tags/开发模式/"}]},{"cover":"/hexo-img/default_cover.png","title":"Android收藏的好文章","month":"三月","day":22,"date":"2016-3-22","url":"/2016/03/22/文章转发-2016-03-22-Android收藏的好文章/","desc":"\n# 工具类\n\n1. [这些小工具让你的Android开发更高效](http://www.jianshu.com/p/a63700cb7720#rd)\n2. 分析内存溢出：[LeakCanary](https://github.com/square/leakcanary)\n3. 分析ANR异常：[BlockCanary](http://blog.zhaiyifan.cn/2016/01/16...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"收藏","path":"/tags/收藏/"}]},{"cover":"/hexo-img/default_cover.png","title":"Markdown常用语法","month":"三月","day":17,"date":"2016-3-17","url":"/2016/03/17/日常学习-markdown常用语法/","desc":"\n# 标题\n\n![](../../hexo-img/img_markdown/14.png)\n\n# 引用\n\n![](../../hexo-img/img_markdown/15.png)\n\n# 序列\n\n![](../../hexo-img/img_markdown/16.png)\n\n**注意：** 序列的缩进使用Tab键或四个空格\n\n# 换行\n\n换行就直接空一行就行\n\n# 代码\n\n![](....","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"},{"cover":"/hexo-img/default_cover.png","title":"托管博客到Coding","month":"三月","day":16,"date":"2016-3-16","url":"/2016/03/16/经验总结-托管博客到Coding/","desc":"\n# 原因\ngithub上push代码，访问速度都比较慢，所以决定迁移到国内的Git托管服务：Coding\n\n# 迁移Repository步骤：\n\n1. 进入Coding站点：，申请帐号\n2. 创建一个Project，如下设置：\n    1. 项目名称为**用户名**\n    2. 设置为公开\n    3. 使用【导入仓库】功能，把github上的仓库导入进来\n3. 从master分支创建一...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"},{"cover":"/hexo-img/default_cover.png","title":"Gradle分享","month":"三月","day":16,"date":"2016-3-16","url":"/2016/03/16/经验总结-Gradle分享/","desc":"\n# Gradle是什么\n\n1. Gradle是一个自动化构建工具，用来替换ant及maven。\n2. Gradle的特点：\n    1. 具有表达性的语言和强大的API（Gradle的表达性语言称为DSL）\n    2. Gradle就是Groovy，但高于Groovy\n    3. 灵活的约定（所有的配置属性都有其默认值，但也可以全部进行配置）\n    4. 和其他构建工具的集成（可以与...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang","tagArr":[{"name":"Android","path":"/tags/Android/"},{"name":"Gradle","path":"/tags/Gradle/"}]},{"cover":"/hexo-img/default_cover.png","title":"Hexo搭建个人博客","month":"三月","day":16,"date":"2016-3-16","url":"/2016/03/16/经验总结-Hexo搭建个人博客/","desc":"\n# 搭建过程\n\n1. Github配置\n    1. 在Github上申请一个帐号\n    2. 创建一个repository，其命名规则有两种\n        1. .github.io // 那你的博客地址就是 http://.github.io **推荐**\n        2.   // 那你的博客地址将是：http://.github.io/\n    3. 使用ssh连接，配置s...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"},{"cover":"/hexo-img/default_cover.png","title":"hexo理解","month":"三月","day":16,"date":"2016-3-16","url":"/2016/03/16/经验总结-hexo理解/","desc":"\n# Hexo是什么\n> A fast, simple & powerful blog framework, powered by Node.js. 基于Node.js的一个快速、简洁且高效的博客框架。\n\n我理解的Hexo是：\n\n1. 是一个Node.js的命令行脚本工具\n2. 一个把markdown编译为html页面，生成一个静态Web网站的静态博客框架\n\n## 命令行脚本工具\n\n使用No...","authorNick":"liuyang","authorLink":"https://github.com/handsomeliuyang"}]